<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cyrus.final_job.dao.system.MenuDao">

    <resultMap type="com.cyrus.final_job.entity.system.Menu" id="MenuMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="url" column="url" jdbcType="VARCHAR"/>
        <result property="path" column="path" jdbcType="VARCHAR"/>
        <result property="component" column="component" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="icon" column="icon" jdbcType="VARCHAR"/>
        <result property="keepAlive" column="keep_alive" jdbcType="INTEGER"/>
        <result property="requireAuth" column="require_auth" jdbcType="INTEGER"/>
        <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
        <result property="enabled" column="enabled" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MenuMap">
        select
          id, url, path, component, name, icon, keep_alive, require_auth, parent_id, enabled
        from final_job.menu
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MenuMap">
        select
          id, url, path, component, name, icon, keep_alive, require_auth, parent_id, enabled
        from final_job.menu
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="MenuMap">
        select
        id, url, path, component, name, icon, keep_alive, require_auth, parent_id, enabled
        from final_job.menu
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="url != null and url != ''">
                and url = #{url}
            </if>
            <if test="path != null and path != ''">
                and path = #{path}
            </if>
            <if test="component != null and component != ''">
                and component = #{component}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="icon != null and icon != ''">
                and icon = #{icon}
            </if>
            <if test="keepAlive != null">
                and keep_alive = #{keepAlive}
            </if>
            <if test="requireAuth != null">
                and require_auth = #{requireAuth}
            </if>
            <if test="parentId != null">
                and parent_id = #{parentId}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into final_job.menu(url, path, component, name, icon, keep_alive, require_auth, parent_id, enabled)
        values (#{url}, #{path}, #{component}, #{name}, #{icon}, #{keepAlive}, #{requireAuth}, #{parentId}, #{enabled})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update final_job.menu
        <set>
            <if test="url != null and url != ''">
                url = #{url},
            </if>
            <if test="path != null and path != ''">
                path = #{path},
            </if>
            <if test="component != null and component != ''">
                component = #{component},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="icon != null and icon != ''">
                icon = #{icon},
            </if>
            <if test="keepAlive != null">
                keep_alive = #{keepAlive},
            </if>
            <if test="requireAuth != null">
                require_auth = #{requireAuth},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from final_job.menu where id = #{id}
    </delete>

    <resultMap id="MenusMap" type="com.cyrus.final_job.entity.system.Menu" extends="MenuMap">
        <collection property="children" ofType="com.cyrus.final_job.entity.system.Menu">
            <result property="id" column="id2" jdbcType="INTEGER"/>
            <result property="path" column="path2" jdbcType="VARCHAR"/>
            <result property="component" column="component2" jdbcType="VARCHAR"/>
            <result property="name" column="name2" jdbcType="VARCHAR"/>
            <result property="icon" column="icon2" jdbcType="VARCHAR"/>
            <result property="keepAlive" column="keepAlive2" jdbcType="INTEGER"/>
            <result property="requireAuth" column="requireAuth2" jdbcType="INTEGER"/>
            <result property="parentId" column="parentId2" jdbcType="INTEGER"/>
            <result property="enabled" column="enabled2" jdbcType="INTEGER"/>
        </collection>
    </resultMap>
    <select id="getMenusByUserId" resultMap="MenusMap">
        select m2.*,
               m1.`id`           as id2,
               m1.`component`    as component2,
               m1.`enabled`      as enabled2,
               m1.`icon`         as icon2,
               m1.`keep_alive`   as keepAlive2,
               m1.`name`         as name2,
               m1.`parent_id`    as parentId2,
               m1.`require_auth` as requireAuth2,
               m1.`path`         as path2
        from (select *
              from menu
              where id in (select menu_id from menu_role where role_id in (select role_id from user_role where user_id = #{userId}))
                and enabled = true) m1
                 left join menu m2 on m1.parent_id = m2.id
    </select>

</mapper>